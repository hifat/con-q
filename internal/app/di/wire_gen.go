// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/hifat/con-q-api/internal/app/config"
	"github.com/hifat/con-q-api/internal/app/database"
	"github.com/hifat/con-q-api/internal/app/handler"
	"github.com/hifat/con-q-api/internal/app/handler/authHandler"
	"github.com/hifat/con-q-api/internal/app/handler/healtzHandler"
	"github.com/hifat/con-q-api/internal/app/handler/resetPasswordHandler"
	"github.com/hifat/con-q-api/internal/app/handler/userHandler"
	"github.com/hifat/con-q-api/internal/app/middleware"
	"github.com/hifat/con-q-api/internal/app/middleware/authMiddleware"
	"github.com/hifat/con-q-api/internal/app/repository/authRepo"
	"github.com/hifat/con-q-api/internal/app/repository/resetPasswordRepo"
	"github.com/hifat/con-q-api/internal/app/repository/userRepo"
	"github.com/hifat/con-q-api/internal/app/service/authService"
	"github.com/hifat/con-q-api/internal/app/service/middlewareService"
	"github.com/hifat/con-q-api/internal/app/service/resetPasswordService"
	"github.com/hifat/con-q-api/internal/app/service/userService"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.AppConfig) (Adapter, func()) {
	healtzHandlerHealtzHandler := healtzHandler.New()
	db, cleanup := database.NewPostgresConnection(cfg)
	iAuthRepo := authRepo.New(db)
	iUserRepo := userRepo.New(db)
	iAuthService := authService.New(cfg, iAuthRepo, iUserRepo)
	authHandlerAuthHandler := authHandler.New(cfg, iAuthService)
	iResetPasswordRepo := resetPasswordRepo.New(db)
	iResetPasswordService := resetPasswordService.New(cfg, iResetPasswordRepo, iUserRepo)
	resetPasswordHandlerResetPasswordHandler := resetPasswordHandler.New(iResetPasswordService)
	iUserService := userService.New(iUserRepo)
	userHandlerUserHandler := userHandler.New(iUserService)
	handlerHandler := handler.New(healtzHandlerHealtzHandler, authHandlerAuthHandler, resetPasswordHandlerResetPasswordHandler, userHandlerUserHandler)
	iMiddlewareService := middlewareService.New(cfg, iAuthRepo, iUserRepo)
	authMiddlewareAuthMiddleware := authMiddleware.New(cfg, iMiddlewareService)
	middlewareMiddleware := middleware.New(authMiddlewareAuthMiddleware)
	adapter := NewAdapter(handlerHandler, middlewareMiddleware)
	return adapter, func() {
		cleanup()
	}
}

// wire.go:

var RepoSet = wire.NewSet(database.NewPostgresConnection, authRepo.New, resetPasswordRepo.New, userRepo.New)

var ServiceSet = wire.NewSet(authService.New, middlewareService.New, resetPasswordService.New, userService.New)

var HandlerSet = wire.NewSet(handler.New, middleware.New, authMiddleware.New, healtzHandler.New, authHandler.New, resetPasswordHandler.New, userHandler.New)

var AdapterSet = wire.NewSet(NewAdapter)
